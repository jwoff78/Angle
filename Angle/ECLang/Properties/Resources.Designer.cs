//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18449
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECLang.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ECLang.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die operators := (?&lt;operator&gt;(+|-|*|/))
        ///number := (([+-]?)[0-9]+(,[0-9]+)?)
        ///variable := ([_a-zA-Z][_a-zA-Z0-9]*)
        ///
        ///expression := ((?&lt;left&gt;(&lt;number&gt;|&lt;variable&gt;))((\s)?)+&lt;operators&gt;((\s)?)+(?&lt;right&gt;(&lt;number&gt;|&lt;variable&gt;)))
        ///
        ///5 + 5 - 6
        ///find 1. expression
        ///resolve and replace
        ///10 - 6 ähnelt.
        /// </summary>
        internal static string ExpressionGrammer {
            get {
                return ResourceManager.GetString("ExpressionGrammer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die name := ([_a-zA-Z](([_a-zA-Z0-9])?)+)
        ///value := (((([_a-zA-Z](([_a-zA-Z0-9])?)+(\.{0,})?(.*)?)|(&quot;\w{0,}&quot;)|((([+-]?)[0-9]+)(\.[0-9]+)?))( (.*))?)|(.*)|&lt;array&gt;|&lt;boolean&gt;|&lt;newobj&gt;)
        ///primitives := (number|byte|regex|object|string|bool|array|null)
        ///
        ///array := \[&lt;value&gt;((,\s+&lt;value&gt;)?)+\]
        ///bool := [tT]rue|[Ff]alse
        ///number := ((([+-]?)[0-9]+)(\.[0-9]+)?)
        ///byte := [0-255]
        ///regexp := /.+/g(?:[mi]+)?
        ///
        ///vardec := dec\s+(?&lt;Name&gt;&lt;name&gt;)\s+:\s+(?&lt;Type&gt;&lt;primitives&gt;)\s+=\s+(?&lt;Value&gt;&lt;value&gt;)
        ///varset := (?&lt;Name&gt;(.*)) = (?&lt;V [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Grammar {
            get {
                return ResourceManager.GetString("Grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die import System
        ///Console.WriteLine(&quot;Please use Eclang IDE&quot;);
        ///Console.WriteLine(&quot;Press a key to continue ...&quot;);
        ///Console.ReadKey(); ähnelt.
        /// </summary>
        internal static string TestCode {
            get {
                return ResourceManager.GetString("TestCode", resourceCulture);
            }
        }
    }
}
